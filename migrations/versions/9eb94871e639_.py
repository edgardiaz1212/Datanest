"""empty message

Revision ID: 9eb94871e639
Revises: 68504302de75
Create Date: 2025-05-13 14:26:55.622393

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9eb94871e639'
down_revision = '68504302de75'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aire_diagnostico_asociacion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('aire_id', sa.Integer(), nullable=False),
    sa.Column('diagnostico_id', sa.Integer(), nullable=False),
    sa.Column('parte_afectada', sa.Enum('EVAPORADORA', 'CONDENSADORA', 'GENERAL', name='parteacenum'), nullable=False),
    sa.Column('notas_asociacion', sa.Text(), nullable=True),
    sa.Column('fecha_hora_asociacion', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['aire_id'], ['aires_acondicionados.id'], ),
    sa.ForeignKeyConstraint(['diagnostico_id'], ['diagnostico_componente.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('aires_acondicionados', schema=None) as batch_op:
        batch_op.drop_constraint('aires_acondicionados_evaporadora_diagnostico_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('aires_acondicionados_condensadora_diagnostico_id_fkey', type_='foreignkey')
        batch_op.drop_column('evaporadora_diagnostico_id')
        batch_op.drop_column('condensadora_diagnostico_id')
        batch_op.drop_column('condensadora_fecha_hora_diagnostico')
        batch_op.drop_column('condensadora_diagnostico_notas')
        batch_op.drop_column('evaporadora_diagnostico_notas')
        batch_op.drop_column('evaporadora_fecha_hora_diagnostico')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('aires_acondicionados', schema=None) as batch_op:
        batch_op.add_column(sa.Column('evaporadora_fecha_hora_diagnostico', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='Fecha y hora en que se registr贸 el diagn贸stico de la evaporadora'))
        batch_op.add_column(sa.Column('evaporadora_diagnostico_notas', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('condensadora_diagnostico_notas', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('condensadora_fecha_hora_diagnostico', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='Fecha y hora en que se registr贸 el diagn贸stico de la condensadora'))
        batch_op.add_column(sa.Column('condensadora_diagnostico_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('evaporadora_diagnostico_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('aires_acondicionados_condensadora_diagnostico_id_fkey', 'diagnostico_componente', ['condensadora_diagnostico_id'], ['id'])
        batch_op.create_foreign_key('aires_acondicionados_evaporadora_diagnostico_id_fkey', 'diagnostico_componente', ['evaporadora_diagnostico_id'], ['id'])

    op.drop_table('aire_diagnostico_asociacion')
    # ### end Alembic commands ###
